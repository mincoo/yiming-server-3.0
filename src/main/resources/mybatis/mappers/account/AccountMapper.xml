<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.uxiaoxi.ym.appserver.db.account.mapper.AccountMapper" >
  <resultMap id="BaseResultMap" type="com.uxiaoxi.ym.appserver.db.account.dto.Account" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="CHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="face" property="face" jdbcType="VARCHAR" />
    <result column="token" property="token" jdbcType="VARCHAR" />
    <result column="regid" property="regid" jdbcType="VARCHAR" />
    <result column="version" property="version" jdbcType="VARCHAR" />
    <result column="create_dt" property="createDt" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, phone, password, type, name, face, token, regid, version, create_dt
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.uxiaoxi.ym.appserver.db.account.dto.AccountExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from account
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from account
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.uxiaoxi.ym.appserver.db.account.dto.AccountExample" >
    delete from account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.uxiaoxi.ym.appserver.db.account.dto.Account" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into account (phone, password, type, 
      name, face, token, 
      regid, version, create_dt
      )
    values (#{phone,jdbcType=VARCHAR}, #{password,jdbcType=CHAR}, #{type,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{face,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR}, 
      #{regid,jdbcType=VARCHAR}, #{version,jdbcType=VARCHAR}, #{createDt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.uxiaoxi.ym.appserver.db.account.dto.Account" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="phone != null" >
        phone,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="face != null" >
        face,
      </if>
      <if test="token != null" >
        token,
      </if>
      <if test="regid != null" >
        regid,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="createDt != null" >
        create_dt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=CHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="face != null" >
        #{face,jdbcType=VARCHAR},
      </if>
      <if test="token != null" >
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="regid != null" >
        #{regid,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="createDt != null" >
        #{createDt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.uxiaoxi.ym.appserver.db.account.dto.AccountExample" resultType="java.lang.Integer" >
    select count(*) from account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update account
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=CHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.face != null" >
        face = #{record.face,jdbcType=VARCHAR},
      </if>
      <if test="record.token != null" >
        token = #{record.token,jdbcType=VARCHAR},
      </if>
      <if test="record.regid != null" >
        regid = #{record.regid,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null" >
        version = #{record.version,jdbcType=VARCHAR},
      </if>
      <if test="record.createDt != null" >
        create_dt = #{record.createDt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update account
    set id = #{record.id,jdbcType=BIGINT},
      phone = #{record.phone,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=CHAR},
      type = #{record.type,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      face = #{record.face,jdbcType=VARCHAR},
      token = #{record.token,jdbcType=VARCHAR},
      regid = #{record.regid,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=VARCHAR},
      create_dt = #{record.createDt,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.uxiaoxi.ym.appserver.db.account.dto.Account" >
    update account
    <set >
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=CHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="face != null" >
        face = #{face,jdbcType=VARCHAR},
      </if>
      <if test="token != null" >
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="regid != null" >
        regid = #{regid,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="createDt != null" >
        create_dt = #{createDt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.uxiaoxi.ym.appserver.db.account.dto.Account" >
    update account
    set phone = #{phone,jdbcType=VARCHAR},
      password = #{password,jdbcType=CHAR},
      type = #{type,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      face = #{face,jdbcType=VARCHAR},
      token = #{token,jdbcType=VARCHAR},
      regid = #{regid,jdbcType=VARCHAR},
      version = #{version,jdbcType=VARCHAR},
      create_dt = #{createDt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  
  <!-- 自己定义方法 -->
  <select id= "searchUser" parameterType="com.uxiaoxi.ym.appserver.web.account.vo.SearchForm" resultMap="VOResultMap" >
    <![CDATA[
        SELECT t.id,
               t.`type`,
               t.`name`,
               t.`face`
          FROM `account` t 
         WHERE t.id > #{start,jdbcType=BIGINT}
           AND t.`name` LIKE  CONCAT('%',#{name,jdbcType=VARCHAR},'%') 
         ORDER BY t.`id`
         LIMIT 0,10
    ]]>
  </select>
 
  <resultMap id="VOResultMap" type ="com.uxiaoxi.ym.appserver.web.account.vo.SearchUserResultVO" >
    <id column="id" property="uid" jdbcType="BIGINT" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="face" property="face" jdbcType="VARCHAR" />
  </resultMap>
  
    <!-- 自己定义方法 -->
  <select id= "searchUserByPhone" parameterType="com.uxiaoxi.ym.appserver.web.account.vo.SearchByPhoneForm" resultMap="VOResultByPhoneMap" >
        SELECT t.id,
               t.`type`,
               t.`name`,
               t.`face`
          FROM `account` t 
         WHERE t.phone = #{phone,jdbcType=VARCHAR}
         <if test="type != null" >
           AND t.`type` = #{type,jdbcType=INTEGER}
        </if>
         
  </select>
 
  <resultMap id="VOResultByPhoneMap" type ="com.uxiaoxi.ym.appserver.web.account.vo.SearchUserResultVO" >
    <id column="id" property="uid" jdbcType="BIGINT" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="face" property="face" jdbcType="VARCHAR" />
  </resultMap>
  
</mapper>