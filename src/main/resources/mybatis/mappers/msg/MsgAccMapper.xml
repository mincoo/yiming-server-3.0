<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.uxiaoxi.ym.appserver.db.msg.mapper.MsgAccMapper" >
  <resultMap id="BaseResultMap" type="com.uxiaoxi.ym.appserver.db.msg.dto.MsgAcc" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="msg_id" property="msgId" jdbcType="BIGINT" />
    <result column="clu_id" property="cluId" jdbcType="BIGINT" />
    <result column="acc_id" property="accId" jdbcType="BIGINT" />
    <result column="readed" property="readed" jdbcType="INTEGER" />
    <result column="create_dt" property="createDt" jdbcType="TIMESTAMP" />
    <result column="use_yn" property="useYn" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, msg_id, clu_id, acc_id, readed, create_dt, use_yn
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.uxiaoxi.ym.appserver.db.msg.dto.MsgAccExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from msg_acc
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from msg_acc
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from msg_acc
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.uxiaoxi.ym.appserver.db.msg.dto.MsgAccExample" >
    delete from msg_acc
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.uxiaoxi.ym.appserver.db.msg.dto.MsgAcc" >
    insert into msg_acc (id, msg_id, clu_id, 
      acc_id, readed, create_dt, 
      use_yn)
    values (#{id,jdbcType=BIGINT}, #{msgId,jdbcType=BIGINT}, #{cluId,jdbcType=BIGINT}, 
      #{accId,jdbcType=BIGINT}, #{readed,jdbcType=INTEGER}, #{createDt,jdbcType=TIMESTAMP}, 
      #{useYn,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.uxiaoxi.ym.appserver.db.msg.dto.MsgAcc" >
    insert into msg_acc
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="msgId != null" >
        msg_id,
      </if>
      <if test="cluId != null" >
        clu_id,
      </if>
      <if test="accId != null" >
        acc_id,
      </if>
      <if test="readed != null" >
        readed,
      </if>
      <if test="createDt != null" >
        create_dt,
      </if>
      <if test="useYn != null" >
        use_yn,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="msgId != null" >
        #{msgId,jdbcType=BIGINT},
      </if>
      <if test="cluId != null" >
        #{cluId,jdbcType=BIGINT},
      </if>
      <if test="accId != null" >
        #{accId,jdbcType=BIGINT},
      </if>
      <if test="readed != null" >
        #{readed,jdbcType=INTEGER},
      </if>
      <if test="createDt != null" >
        #{createDt,jdbcType=TIMESTAMP},
      </if>
      <if test="useYn != null" >
        #{useYn,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.uxiaoxi.ym.appserver.db.msg.dto.MsgAccExample" resultType="java.lang.Integer" >
    select count(*) from msg_acc
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update msg_acc
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.msgId != null" >
        msg_id = #{record.msgId,jdbcType=BIGINT},
      </if>
      <if test="record.cluId != null" >
        clu_id = #{record.cluId,jdbcType=BIGINT},
      </if>
      <if test="record.accId != null" >
        acc_id = #{record.accId,jdbcType=BIGINT},
      </if>
      <if test="record.readed != null" >
        readed = #{record.readed,jdbcType=INTEGER},
      </if>
      <if test="record.createDt != null" >
        create_dt = #{record.createDt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.useYn != null" >
        use_yn = #{record.useYn,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update msg_acc
    set id = #{record.id,jdbcType=BIGINT},
      msg_id = #{record.msgId,jdbcType=BIGINT},
      clu_id = #{record.cluId,jdbcType=BIGINT},
      acc_id = #{record.accId,jdbcType=BIGINT},
      readed = #{record.readed,jdbcType=INTEGER},
      create_dt = #{record.createDt,jdbcType=TIMESTAMP},
      use_yn = #{record.useYn,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.uxiaoxi.ym.appserver.db.msg.dto.MsgAcc" >
    update msg_acc
    <set >
      <if test="msgId != null" >
        msg_id = #{msgId,jdbcType=BIGINT},
      </if>
      <if test="cluId != null" >
        clu_id = #{cluId,jdbcType=BIGINT},
      </if>
      <if test="accId != null" >
        acc_id = #{accId,jdbcType=BIGINT},
      </if>
      <if test="readed != null" >
        readed = #{readed,jdbcType=INTEGER},
      </if>
      <if test="createDt != null" >
        create_dt = #{createDt,jdbcType=TIMESTAMP},
      </if>
      <if test="useYn != null" >
        use_yn = #{useYn,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.uxiaoxi.ym.appserver.db.msg.dto.MsgAcc" >
    update msg_acc
    set msg_id = #{msgId,jdbcType=BIGINT},
      clu_id = #{cluId,jdbcType=BIGINT},
      acc_id = #{accId,jdbcType=BIGINT},
      readed = #{readed,jdbcType=INTEGER},
      create_dt = #{createDt,jdbcType=TIMESTAMP},
      use_yn = #{useYn,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <!-- 自己定义方法 -->
  
  <sql id="Base_Msg_List" >
     m.id AS `mid`,m.`acc_id` AS `sender_id` ,t.`clu_id` AS `gid`, m.`msg_type` AS `type`, m.`url` AS `url`, m.`title` AS `title`, c.`title` AS `gname`, a.`name` AS `uname`, a.`face` AS `uface`, CONCAT(c.`title`,' ' ,a.`name`) AS `sender`,DATE_FORMAT(m.`create_dt`,'%Y-%m-%d %k:%i') AS `stime`,t.`readed` AS `status`
  </sql>
  
  <sql id="Base_Msg_condition" >
    FROM msg_acc t, msg m , cluster c, `account` a
         WHERE t.`msg_id` = m.`id`
           AND t.`clu_id` = c.`id`
           AND m.`acc_id` = a.`id`
  </sql>
  
  <select id= "getlist" parameterType ="com.uxiaoxi.ym.appserver.web.msg.vo.MsgForm" resultMap= "VOResultMap" >
        SELECT 
        <include refid="Base_Msg_List" />
        <include refid="Base_Msg_condition" />
        <if test="start != null and start !=0 " >
           <![CDATA[      
           AND m.`id` < #{start,jdbcType=BIGINT}
           ]]>
        </if>
           AND t.`acc_id` = #{uid,jdbcType=BIGINT}
           AND t.`use_yn` = 1
         ORDER BY m.`id` DESC
         LIMIT 0,10
   
  </select>
  
  <resultMap id= "VOResultMap" type ="com.uxiaoxi.ym.appserver.web.msg.vo.MsgVO" >
    <id column="mid" property="mid" jdbcType="BIGINT" />
    <result column="sender_id" property="senderId" jdbcType="INTEGER" />
    <result column="gid" property="gid" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="gname" property="gname" jdbcType="VARCHAR" />
    <result column="uname" property="uname" jdbcType="VARCHAR" />
    <result column="uface" property="uface" jdbcType="VARCHAR" />
    <result column="sender" property="sender" jdbcType="VARCHAR" />
    <result column="stime" property="stime" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  
    <select id= "getdata" parameterType ="com.uxiaoxi.ym.appserver.web.msg.vo.MsgDataForm" resultMap= "ResultMap" >
        SELECT 
        <include refid="Base_Msg_List" /> ,
               m.`content` as content
        <include refid="Base_Msg_condition" />
           AND m.`id` = #{mid,jdbcType=BIGINT}
           AND t.`acc_id` = #{uid,jdbcType=BIGINT}
         ORDER BY t.`id` ASC
  </select>
  
  <resultMap id= "ResultMap" type ="com.uxiaoxi.ym.appserver.web.msg.vo.MsgWithContentVO" extends="VOResultMap" >
    <result column="content" property="content" jdbcType="INTEGER" />
  </resultMap>
  
  
  <select id= "getReadState" parameterType ="com.uxiaoxi.ym.appserver.web.msg.vo.MsgReadStateForm" resultMap= "ReadResultMap" >
      SELECT ma.`acc_id` AS `uid`, 
             a.`type` AS `type` ,
             a.name AS `name`, 
             a.`face` AS `face`, 
             DATE_FORMAT(ma.`create_dt`,'%Y-%m-%d %k:%i') AS `read_time` ,
             ma.`readed` AS `status` 
        FROM `msg_acc` ma 
        LEFT JOIN `account` a ON ma.`acc_id` = a.`id`
        LEFT JOIN msg  m ON m.`id` = ma.`msg_id`
       WHERE m.`id` = #{mid,jdbcType=BIGINT}
         AND m.`acc_id` = #{uid,jdbcType=BIGINT}
  </select>
  
  <resultMap id= "ReadResultMap" type ="com.uxiaoxi.ym.appserver.web.msg.vo.MsgReadStateVO" >
    <result column="uid" property="uid" jdbcType="BIGINT" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="face" property="face" jdbcType="VARCHAR" />
    <result column="read_time" property="readTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  
</mapper>