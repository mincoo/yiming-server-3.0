<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.uxiaoxi.ym.appserver.db.msg.mapper.OptionLogMapper">
  <resultMap id="BaseResultMap" type="com.uxiaoxi.ym.appserver.db.msg.dto.OptionLog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 30 20:10:15 CST 2016.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="option_type" jdbcType="VARCHAR" property="optionType" />
    <result column="data_id" jdbcType="BIGINT" property="dataId" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.uxiaoxi.ym.appserver.db.msg.dto.OptionLog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 30 20:10:15 CST 2016.
    -->
    <result column="data_after" jdbcType="LONGVARCHAR" property="dataAfter" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 30 20:10:15 CST 2016.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 30 20:10:15 CST 2016.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 30 20:10:15 CST 2016.
    -->
    id, option_type, data_id, create_at
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 30 20:10:15 CST 2016.
    -->
    data_after
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.uxiaoxi.ym.appserver.db.msg.dto.OptionLogExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 30 20:10:15 CST 2016.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from option_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.uxiaoxi.ym.appserver.db.msg.dto.OptionLogExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 30 20:10:15 CST 2016.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from option_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 30 20:10:15 CST 2016.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from option_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 30 20:10:15 CST 2016.
    -->
    delete from option_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.uxiaoxi.ym.appserver.db.msg.dto.OptionLogExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 30 20:10:15 CST 2016.
    -->
    delete from option_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.uxiaoxi.ym.appserver.db.msg.dto.OptionLog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 30 20:10:15 CST 2016.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into option_log (option_type, data_id, create_at, 
      data_after)
    values (#{optionType,jdbcType=VARCHAR}, #{dataId,jdbcType=BIGINT}, #{createAt,jdbcType=TIMESTAMP}, 
      #{dataAfter,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.uxiaoxi.ym.appserver.db.msg.dto.OptionLog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 30 20:10:15 CST 2016.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into option_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="optionType != null">
        option_type,
      </if>
      <if test="dataId != null">
        data_id,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="dataAfter != null">
        data_after,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="optionType != null">
        #{optionType,jdbcType=VARCHAR},
      </if>
      <if test="dataId != null">
        #{dataId,jdbcType=BIGINT},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="dataAfter != null">
        #{dataAfter,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.uxiaoxi.ym.appserver.db.msg.dto.OptionLogExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 30 20:10:15 CST 2016.
    -->
    select count(*) from option_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 30 20:10:15 CST 2016.
    -->
    update option_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.optionType != null">
        option_type = #{record.optionType,jdbcType=VARCHAR},
      </if>
      <if test="record.dataId != null">
        data_id = #{record.dataId,jdbcType=BIGINT},
      </if>
      <if test="record.createAt != null">
        create_at = #{record.createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dataAfter != null">
        data_after = #{record.dataAfter,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 30 20:10:15 CST 2016.
    -->
    update option_log
    set id = #{record.id,jdbcType=BIGINT},
      option_type = #{record.optionType,jdbcType=VARCHAR},
      data_id = #{record.dataId,jdbcType=BIGINT},
      create_at = #{record.createAt,jdbcType=TIMESTAMP},
      data_after = #{record.dataAfter,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 30 20:10:15 CST 2016.
    -->
    update option_log
    set id = #{record.id,jdbcType=BIGINT},
      option_type = #{record.optionType,jdbcType=VARCHAR},
      data_id = #{record.dataId,jdbcType=BIGINT},
      create_at = #{record.createAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.uxiaoxi.ym.appserver.db.msg.dto.OptionLog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 30 20:10:15 CST 2016.
    -->
    update option_log
    <set>
      <if test="optionType != null">
        option_type = #{optionType,jdbcType=VARCHAR},
      </if>
      <if test="dataId != null">
        data_id = #{dataId,jdbcType=BIGINT},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="dataAfter != null">
        data_after = #{dataAfter,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.uxiaoxi.ym.appserver.db.msg.dto.OptionLog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 30 20:10:15 CST 2016.
    -->
    update option_log
    set option_type = #{optionType,jdbcType=VARCHAR},
      data_id = #{dataId,jdbcType=BIGINT},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      data_after = #{dataAfter,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.uxiaoxi.ym.appserver.db.msg.dto.OptionLog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 30 20:10:15 CST 2016.
    -->
    update option_log
    set option_type = #{optionType,jdbcType=VARCHAR},
      data_id = #{dataId,jdbcType=BIGINT},
      create_at = #{createAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <cache>
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 30 20:10:15 CST 2016.
    -->
  </cache>
  <resultMap id="BaseResultMap" type="com.uxiaoxi.ym.appserver.db.msg.dto.OptionLog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="option_type" jdbcType="VARCHAR" property="optionType" />
    <result column="data_id" jdbcType="BIGINT" property="dataId" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.uxiaoxi.ym.appserver.db.msg.dto.OptionLog">
    <result column="data_after" jdbcType="LONGVARCHAR" property="dataAfter" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, option_type, data_id, create_at
  </sql>
  <sql id="Blob_Column_List">
    data_after
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.uxiaoxi.ym.appserver.db.msg.dto.OptionLogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from option_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.uxiaoxi.ym.appserver.db.msg.dto.OptionLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from option_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from option_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from option_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.uxiaoxi.ym.appserver.db.msg.dto.OptionLogExample">
    delete from option_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.uxiaoxi.ym.appserver.db.msg.dto.OptionLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into option_log (option_type, data_id, create_at, 
      data_after)
    values (#{optionType,jdbcType=VARCHAR}, #{dataId,jdbcType=BIGINT}, #{createAt,jdbcType=TIMESTAMP}, 
      #{dataAfter,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.uxiaoxi.ym.appserver.db.msg.dto.OptionLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into option_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="optionType != null">
        option_type,
      </if>
      <if test="dataId != null">
        data_id,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="dataAfter != null">
        data_after,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="optionType != null">
        #{optionType,jdbcType=VARCHAR},
      </if>
      <if test="dataId != null">
        #{dataId,jdbcType=BIGINT},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="dataAfter != null">
        #{dataAfter,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.uxiaoxi.ym.appserver.db.msg.dto.OptionLogExample" resultType="java.lang.Integer">
    select count(*) from option_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update option_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.optionType != null">
        option_type = #{record.optionType,jdbcType=VARCHAR},
      </if>
      <if test="record.dataId != null">
        data_id = #{record.dataId,jdbcType=BIGINT},
      </if>
      <if test="record.createAt != null">
        create_at = #{record.createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dataAfter != null">
        data_after = #{record.dataAfter,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update option_log
    set id = #{record.id,jdbcType=BIGINT},
      option_type = #{record.optionType,jdbcType=VARCHAR},
      data_id = #{record.dataId,jdbcType=BIGINT},
      create_at = #{record.createAt,jdbcType=TIMESTAMP},
      data_after = #{record.dataAfter,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update option_log
    set id = #{record.id,jdbcType=BIGINT},
      option_type = #{record.optionType,jdbcType=VARCHAR},
      data_id = #{record.dataId,jdbcType=BIGINT},
      create_at = #{record.createAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.uxiaoxi.ym.appserver.db.msg.dto.OptionLog">
    update option_log
    <set>
      <if test="optionType != null">
        option_type = #{optionType,jdbcType=VARCHAR},
      </if>
      <if test="dataId != null">
        data_id = #{dataId,jdbcType=BIGINT},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="dataAfter != null">
        data_after = #{dataAfter,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.uxiaoxi.ym.appserver.db.msg.dto.OptionLog">
    update option_log
    set option_type = #{optionType,jdbcType=VARCHAR},
      data_id = #{dataId,jdbcType=BIGINT},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      data_after = #{dataAfter,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.uxiaoxi.ym.appserver.db.msg.dto.OptionLog">
    update option_log
    set option_type = #{optionType,jdbcType=VARCHAR},
      data_id = #{dataId,jdbcType=BIGINT},
      create_at = #{createAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <cache />
  <resultMap id="BaseResultMap" type="com.uxiaoxi.ym.appserver.db.msg.dto.OptionLog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="option_type" jdbcType="VARCHAR" property="optionType" />
    <result column="data_id" jdbcType="BIGINT" property="dataId" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.uxiaoxi.ym.appserver.db.msg.dto.OptionLog">
    <result column="data_after" jdbcType="LONGVARCHAR" property="dataAfter" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, option_type, data_id, create_at
  </sql>
  <sql id="Blob_Column_List">
    data_after
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.uxiaoxi.ym.appserver.db.msg.dto.OptionLogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from option_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.uxiaoxi.ym.appserver.db.msg.dto.OptionLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from option_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from option_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from option_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.uxiaoxi.ym.appserver.db.msg.dto.OptionLogExample">
    delete from option_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.uxiaoxi.ym.appserver.db.msg.dto.OptionLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into option_log (option_type, data_id, create_at, 
      data_after)
    values (#{optionType,jdbcType=VARCHAR}, #{dataId,jdbcType=BIGINT}, #{createAt,jdbcType=TIMESTAMP}, 
      #{dataAfter,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.uxiaoxi.ym.appserver.db.msg.dto.OptionLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into option_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="optionType != null">
        option_type,
      </if>
      <if test="dataId != null">
        data_id,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="dataAfter != null">
        data_after,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="optionType != null">
        #{optionType,jdbcType=VARCHAR},
      </if>
      <if test="dataId != null">
        #{dataId,jdbcType=BIGINT},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="dataAfter != null">
        #{dataAfter,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.uxiaoxi.ym.appserver.db.msg.dto.OptionLogExample" resultType="java.lang.Integer">
    select count(*) from option_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update option_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.optionType != null">
        option_type = #{record.optionType,jdbcType=VARCHAR},
      </if>
      <if test="record.dataId != null">
        data_id = #{record.dataId,jdbcType=BIGINT},
      </if>
      <if test="record.createAt != null">
        create_at = #{record.createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dataAfter != null">
        data_after = #{record.dataAfter,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update option_log
    set id = #{record.id,jdbcType=BIGINT},
      option_type = #{record.optionType,jdbcType=VARCHAR},
      data_id = #{record.dataId,jdbcType=BIGINT},
      create_at = #{record.createAt,jdbcType=TIMESTAMP},
      data_after = #{record.dataAfter,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update option_log
    set id = #{record.id,jdbcType=BIGINT},
      option_type = #{record.optionType,jdbcType=VARCHAR},
      data_id = #{record.dataId,jdbcType=BIGINT},
      create_at = #{record.createAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.uxiaoxi.ym.appserver.db.msg.dto.OptionLog">
    update option_log
    <set>
      <if test="optionType != null">
        option_type = #{optionType,jdbcType=VARCHAR},
      </if>
      <if test="dataId != null">
        data_id = #{dataId,jdbcType=BIGINT},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="dataAfter != null">
        data_after = #{dataAfter,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.uxiaoxi.ym.appserver.db.msg.dto.OptionLog">
    update option_log
    set option_type = #{optionType,jdbcType=VARCHAR},
      data_id = #{dataId,jdbcType=BIGINT},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      data_after = #{dataAfter,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.uxiaoxi.ym.appserver.db.msg.dto.OptionLog">
    update option_log
    set option_type = #{optionType,jdbcType=VARCHAR},
      data_id = #{dataId,jdbcType=BIGINT},
      create_at = #{createAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <cache />
</mapper>